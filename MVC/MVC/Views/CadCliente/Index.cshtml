@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<MVC.Models.CadCliente>
@{
    ViewBag.Title = "Index";
}
<br />
<h1>Relação de Contatos</h1>
<br />
<hr />
<div class="teste">
    @using (Html.BeginForm("Search", "CadCliente", FormMethod.Get))
    {
        @Html.Label("Nome", "Nome")
        <input type="text" name="nome" />
        <input type="submit" name="submit" value="Procurar" class="btn btn-outline-info" />
    }
</div>
<div class="teste1">
    <a type="button" asp-action="Create" class="btn btn-lg btn-outline-light">Criar Novo Contato</a>
</div>
<hr />
<div class="row">
    <table class="table">
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].CPF)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].DataNasc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Cidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Sexo)
            </th>

        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new {@class = "btn btn-outline-success btn-sm"}) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.Id}, new {@class = "btn btn-outline-primary btn-sm"}) |
                    @Html.ActionLink("Deletar", "Delete", new { id = item.Id}, new { onclick = "return confirm('Deseja realmente deletar este contato ?');", @class = "btn btn-outline-warning btn-sm" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CPF)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNasc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cidade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sexo)
                </td>
            </tr>
        }
    </table>    
    <div>
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        de @Model.PageCount
        @if (Model.HasPreviousPage)
        {
            @Html.Raw(" ")
            ;
            @Html.ActionLink("Anterior", "Index", new { pagina = Model.PageNumber - 1 }, new{@class="btn btn-outline-primary"})
        }
        else
        {
            @:<
            @Html.Raw(" ")
            ;
            @:< Anterior
        }
        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Próxima", "Index", new { pagina = Model.PageNumber + 1 }, new{@class="btn btn-outline-info"})
            @Html.Raw(" ")
            ;
        }
        else
        {
            @:Próxima >
            @Html.Raw(" ")
            @:>
        }
    </div>
</div>
